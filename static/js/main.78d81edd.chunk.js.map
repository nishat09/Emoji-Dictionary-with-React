{"version":3,"sources":["emojipedia.js","components/Card.jsx","components/App.jsx","index.js"],"names":["emojipedia","id","emoji","name","meaning","Card","props","React","createElement","Fragment","className","role","aria-label","App","entries","setEntries","useState","newCard","setNewCard","handleChange","event","value","target","prev","onSubmit","preventDefault","newEntry","length","type","placeholder","onChange","map","item","key","ReactDOM","render","document","getElementById"],"mappings":"4LAwBeA,MAxBI,CACjB,CACEC,GAAI,EACJC,MAAO,eACPC,KAAM,eACNC,QACE,iJAEJ,CACEH,GAAI,EACJC,MAAO,eACPC,KAAM,2BACNC,QACE,yKAEJ,CACEH,GAAI,EACJC,MAAO,eACPC,KAAM,iCACNC,QACE,kMCFSC,MAhBf,SAAcC,GACZ,OACEC,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,OAAKE,UAAU,QACbH,IAAAC,cAAA,UACED,IAAAC,cAAA,QAAME,UAAU,QAAQC,KAAK,MAAMC,aAAW,gBAC3CN,EAAMJ,OAETK,IAAAC,cAAA,YAAOF,EAAMH,OAEfI,IAAAC,cAAA,UAAKF,EAAMF,YCkEJS,MA1Ef,WACE,MAAOC,EAASC,GAAcC,mBAAShB,IAChCiB,EAASC,GAAcF,mBAAS,CACrCd,MAAO,GACPC,KAAM,GACNC,QAAS,KAGX,SAASe,EAAaC,GACpB,MAAM,KAAEjB,EAAI,MAAEkB,GAAUD,EAAME,OAC9BJ,EAAYK,IAAI,IACXA,EACH,CAACpB,GAAOkB,KAiBZ,OACEd,IAAAC,cAAA,WACED,IAAAC,cAAA,UACED,IAAAC,cAAA,YAAM,eAGRD,IAAAC,cAAA,QAAMgB,SAnBV,SAAiBJ,GAEf,GADAA,EAAMK,kBACDR,EAAQf,QAAUe,EAAQd,OAASc,EAAQb,QAAS,OAEzD,MAAMsB,EAAW,CACfzB,GAAIa,EAAQa,OAAS,KAClBV,GAGLF,EAAYQ,GAAS,CAACG,KAAaH,IACnCL,EAAW,CAAEhB,MAAO,GAAIC,KAAM,GAAIC,QAAS,MAShBM,UAAU,QACjCH,IAAAC,cAAA,SACEL,KAAK,QACLyB,KAAK,OACLC,YAAY,QACZR,MAAOJ,EAAQf,MACf4B,SAAUX,IAEZZ,IAAAC,cAAA,SACEL,KAAK,OACLyB,KAAK,OACLC,YAAY,OACZR,MAAOJ,EAAQd,KACf2B,SAAUX,IAEZZ,IAAAC,cAAA,SACEL,KAAK,UACLyB,KAAK,OACLC,YAAY,UACZR,MAAOJ,EAAQb,QACf0B,SAAUX,IAEZZ,IAAAC,cAAA,UAAQoB,KAAK,UAAS,QAGxBrB,IAAAC,cAAA,MAAIE,UAAU,cACXI,EAAQiB,IAAKC,GACZzB,IAAAC,cAACH,EAAI,CACH4B,IAAKD,EAAK/B,GACVC,MAAO8B,EAAK9B,MACZC,KAAM6B,EAAK7B,KACXC,QAAS4B,EAAK5B,c,KCjE1B8B,IAASC,OAAO5B,IAAAC,cAACK,EAAG,MAAKuB,SAASC,eAAe,U","file":"static/js/main.78d81edd.chunk.js","sourcesContent":["const emojipedia = [\n  {\n    id: 1,\n    emoji: \"üí™\",\n    name: \"Tense Biceps\",\n    meaning:\n      \"‚ÄúYou can do that!‚Äù or ‚ÄúI feel strong!‚Äù Arm with tense biceps. Also used in connection with doing sports, e.g. at the gym.\",\n  },\n  {\n    id: 2,\n    emoji: \"üôè\",\n    name: \"Person With Folded Hands\",\n    meaning:\n      \"Two hands pressed together. Is currently very introverted, saying a prayer, or hoping for enlightenment. Is also used as a ‚Äúhigh five‚Äù or to say thank you.\",\n  },\n  {\n    id: 3,\n    emoji: \"ü§£\",\n    name: \"Rolling On The Floor, Laughing\",\n    meaning:\n      \"This is funny! A smiley face, rolling on the floor, laughing. The face is laughing boundlessly. The emoji version of ‚Äúrofl‚Äú. Stands for ‚Äûrolling on the floor, laughing‚Äú.\",\n  },\n];\n\nexport default emojipedia;\n","import React from \"react\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <>\r\n      <div className=\"term\">\r\n        <dt>\r\n          <span className=\"emoji\" role=\"img\" aria-label=\"Tense Biceps\">\r\n            {props.emoji}\r\n          </span>\r\n          <span>{props.name}</span>\r\n        </dt>\r\n        <dd>{props.meaning}</dd>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\nimport emojipedia from \"../emojipedia\";\nimport Card from \"./Card\";\n\nfunction App() {\n  const [entries, setEntries] = useState(emojipedia);\n  const [newCard, setNewCard] = useState({\n    emoji: \"\",\n    name: \"\",\n    meaning: \"\"\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setNewCard((prev) => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n\n  function addCard(event) {\n    event.preventDefault();\n    if (!newCard.emoji || !newCard.name || !newCard.meaning) return;\n\n    const newEntry = {\n      id: entries.length + 1,\n      ...newCard\n    };\n\n    setEntries((prev) => [newEntry, ...prev]);\n    setNewCard({ emoji: \"\", name: \"\", meaning: \"\" });\n  }\n\n  return (\n    <div>\n      <h1>\n        <span>emojipedia</span>\n      </h1>\n\n      <form onSubmit={addCard} className=\"form\">\n        <input\n          name=\"emoji\"\n          type=\"text\"\n          placeholder=\"Emoji\"\n          value={newCard.emoji}\n          onChange={handleChange}\n        />\n        <input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Name\"\n          value={newCard.name}\n          onChange={handleChange}\n        />\n        <input\n          name=\"meaning\"\n          type=\"text\"\n          placeholder=\"Meaning\"\n          value={newCard.meaning}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n\n      <dl className=\"dictionary\">\n        {entries.map((item) => (\n          <Card\n            key={item.id}\n            emoji={item.emoji}\n            name={item.name}\n            meaning={item.meaning}\n          />\n        ))}\n      </dl>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}